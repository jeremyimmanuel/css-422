0000102A Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/2/2020 11:30:04 PM

00001000                             1      ORG $1000
00001000                             2  
00001000  =00004000                  3  STARTADDR   EQU     $4000
00001000  =00006000                  4  ENDADDR     EQU     $6000
00001000  =000000AA                  5  DATA        EQU     $AA
00001000  =0000B000                  6  TARGET      EQU     $B000
00001000  =00004051                  7  ANS         EQU     $4051
00001000                             8  
00001000                             9  Addr1       DS.L    1
00001004                            10  Addsum      DS.W    1
00001006                            11  CarryBit    DS.B    1
00001007                            12  
00001007= 41 64 64 72 31 20 ...     13  ADDR1STRING     DC.B 'Addr1 : ', 0
00001010= 41 64 64 73 75 6D ...     14  ADDSUMSTRING    DC.B 'Addsum : ', 0
0000101A= 43 61 72 72 79 42 ...     15  CARRYBITSTRING  DC.B 'CarryBit : ', 0
00001026                            16  
00001026                            17  
00001026                            18  
00001026  =0000000D                 19  CR          EQU     $0D
00001026  =0000000A                 20  LF          EQU     $0A
00001026= 0D 0A 00                  21  NEWLINE     DC.B    CR,LF,0
00001029                            22  
00001029                            23  
00001029                            24  
00001029                            25  START:
00001029                            26  * TEST 
0000102A  2C7C 00004000             27  TEST    MOVEA.L #STARTADDR, A6 
00001030                            28          
00001030  13FC 00AA 0000B000        29          MOVE.B #DATA, TARGET    * set value to target
00001038  1039 0000B000             30          MOVE.B (TARGET), D0     * move value to D0
0000103E                            31          
0000103E  11FC 00AA 4051            32          MOVE.B #DATA, ANS      * set value to answer addr1
00001044                            33          
00001044                            34  
00001044  6000 0002                 35          BRA FIND_LOOP
00001048                            36  
00001048                            37  
00001048  BDFC 00006000             38  FIND_LOOP   CMPA.L #ENDADDR, A6 * check if in range between $4000 and $6000
0000104E  6C00 000A                 39              BGE OUT             * if greater than ending address, stop
00001052                            40  
00001052  B01E                      41              CMP.B (A6)+, D0 * check value at curr address
00001054  6700 0012                 42              BEQ EQUAL       * if equal branch to EQUAL
00001058  60EE                      43              BRA FIND_LOOP   * LOOP AGAIN
0000105A                            44  
0000105A  227C 00004000             45  OUT         MOVEA.L #STARTADDR, A1  * set STARTADDR to A1
00001060  21C9 1000                 46              MOVE.L A1, Addr1        * set A1 to Addr1
00001064  6000 000C                 47              BRA SUM256SETUP              * Move on to sum loop
00001068                            48  
00001068  538E                      49  EQUAL       SUBA.L #1, A6       * decrement address by 1 because of post incrementation in prev instructions
0000106A  21CE 1000                 50              MOVE.L A6, Addr1    * Put address in Addr1 var
0000106E  6000 0002                 51              BRA SUM256SETUP          * 
00001072                            52  
00001072                            53  SUM256SETUP * Setup start and end address
00001072  2E78 1000                 54              MOVEA.L Addr1, A7   * we want to store the loop ending address at A7 
00001076  DFFC 00000102             55              ADDA.L #258, A7     * Add 256 bytes because of the instructions
0000107C                            56  
0000107C                            57              * Setup inital values
0000107C  31FC 0000 1004            58              MOVE.W #0, Addsum   * initialize Addsum as 0
00001082  11FC 0000 1006            59              MOVE.B #0, CarryBit * initialize CarryBit as 0
00001088                            60  
00001088  4241                      61              CLR D1              * Setup D1
0000108A                            62  
0000108A                            63  SUM256      * Check if iteration < 256
0000108A  BDCF                      64              CMPA.L A7, A6       * Compare address at A7 and A6
0000108C  6E00 0024                 65              BGT DISPLAY         * BGE or BGT?
00001090                            66  
00001090                            67              * Add value to Addsum
00001090  121E                      68              MOVE.B (A6)+, D1    * move value in A6 to D1 and increment A6
00001092  D378 1004                 69              ADD.W D1, Addsum    * add value to Addsum
00001096  6500 0004                 70              BCS GOTCARRY
0000109A  60EE                      71              BRA SUM256            
0000109C                            72  
0000109C                            73  
0000109C  11FC 0001 1006            74  GOTCARRY    MOVE.B #1, CarryBit
000010A2  60E6                      75              BRA SUM256
000010A4                            76  
000010A4  43F8 1026                 77  PRINTLN     LEA NEWLINE, A1
000010A8  103C 000E                 78              MOVE.B #14, D0
000010AC  4E4F                      79              TRAP #15
000010AE                            80  
000010AE  6000 0002                 81              BRA DISPLAY
000010B2                            82  
000010B2                            83  
000010B2                            84  DISPLAY     * Print Addr1 : [Addr1] in decimal value
000010B2  43F8 1007                 85              LEA ADDR1STRING, A1
000010B6  103C 000E                 86              MOVE.B #14, D0
000010BA  4E4F                      87              TRAP #15
000010BC                            88  
000010BC  2238 1000                 89              MOVE.L Addr1, D1    * Prints
000010C0  103C 0003                 90              MOVE.B #3, D0       * res
000010C4  4E4F                      91              TRAP #15
000010C6                            92  
000010C6  43F8 1026                 93              LEA NEWLINE, A1
000010CA  103C 000E                 94              MOVE.B #14, D0
000010CE  4E4F                      95              TRAP #15
000010D0                            96  
000010D0  43F8 1010                 97              LEA ADDSUMSTRING, A1
000010D4  103C 000E                 98              MOVE.B #14, D0
000010D8  4E4F                      99              TRAP #15
000010DA                           100  
000010DA  4281                     101              CLR.L D1
000010DC  3238 1004                102              MOVE.W Addsum, D1
000010E0  103C 0003                103              MOVE.B #3, D0
000010E4  4E4F                     104              TRAP #15
000010E6                           105  
000010E6  43F8 1026                106              LEA NEWLINE, A1
000010EA  103C 000E                107              MOVE.B #14, D0
000010EE  4E4F                     108              TRAP #15
000010F0                           109  
000010F0                           110  
000010F0                           111  
000010F0  43F8 101A                112              LEA CARRYBITSTRING, A1
000010F4  103C 000E                113              MOVE.B #14, D0
000010F8  4E4F                     114              TRAP #15
000010FA                           115  
000010FA  4281                     116              CLR.L D1
000010FC  1238 1006                117              MOVE.B CarryBit, D1
00001100  103C 0003                118              MOVE.B #3, D0
00001104  4E4F                     119              TRAP #15
00001106                           120  
00001106                           121  
00001106                           122  
Line 123 WARNING: Origin value is odd (Location counter set to next highest address)
00001106                           123      END START

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR1               1000
ADDR1STRING         1007
ADDSUM              1004
ADDSUMSTRING        1010
ANS                 4051
CARRYBIT            1006
CARRYBITSTRING      101A
CR                  D
DATA                AA
DISPLAY             10B2
ENDADDR             6000
EQUAL               1068
FIND_LOOP           1048
GOTCARRY            109C
LF                  A
NEWLINE             1026
OUT                 105A
PRINTLN             10A4
START               1029
STARTADDR           4000
SUM256              108A
SUM256SETUP         1072
TARGET              B000
TEST                102A
